{"version":3,"sources":["api.js","App.js","index.js"],"names":["fetchImages","breed","a","fetch","response","json","data","message","Header","className","Image","props","src","alt","Loading","Gallery","urls","map","url","Form","onSubmit","event","preventDefault","target","elements","onFormSubmit","value","name","defaultValue","type","Main","useState","setUrls","useEffect","then","Footer","href","App","render","document","querySelector"],"mappings":"8KAEO,SAAeA,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAC,EAAA,sEAEoBC,MAAM,6BAAD,OAA8BF,EAA9B,sBAFzB,cAEGG,EAFH,gBAGgBA,EAASC,OAHzB,cAGGC,EAHH,yBAIIA,EAAKC,SAJT,4C,iCCKP,SAASC,IACL,OACI,wBAAQC,UAAU,uBAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,QAAd,mCAQpB,SAASC,EAAMC,GACX,OACI,qBAAKF,UAAU,OAAf,SACI,qBAAKA,UAAU,aAAf,SACI,wBAAQA,UAAU,QAAlB,SACI,qBACIG,IAAKD,EAAMC,IACXC,IAAI,mBAQ5B,SAASC,IACL,OAAO,2CAGX,SAASC,EAAQJ,GAEb,IAAOK,EAAQL,EAARK,KAGP,OAAa,OAATA,EACO,cAACF,EAAD,IAGP,qBAAKL,UAAU,oCAAf,SAEKO,EAAKC,KAAI,SAACC,GACP,OACI,qBAAeT,UAAU,cAAzB,SACI,cAACC,EAAD,CAAOE,IAAKM,KADNA,QAS9B,SAASC,EAAKR,GAMV,OACI,8BACI,sBAAMS,SAPd,SAAsBC,GAClBA,EAAMC,iBACN,IAAOrB,EAASoB,EAAME,OAAOC,SAAtBvB,MACPU,EAAMc,aAAaxB,EAAMyB,QAIrB,SACI,sBAAKjB,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,yBAAQkB,KAAK,QAAQC,aAAa,QAAlC,UACI,wBAAQF,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,0BAIZ,qBAAKjB,UAAU,UAAf,SACI,wBAAQoB,KAAK,SAASpB,UAAU,iBAAhC,6BAUxB,SAASqB,IAKL,MAAwBC,mBAAS,MAAjC,mBAAOf,EAAP,KAAagB,EAAb,KAaA,OAZAC,qBAAU,WACNjC,EAAY,SAASkC,MAAK,SAAClB,GAEvBgB,EAAQhB,QAEb,IAQC,iCACI,yBAASP,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAACU,EAAD,CAAMM,aATtB,SAAsBxB,GAClBD,EAAYC,GAAOiC,MAAK,SAAClB,GACrBgB,EAAQhB,aAUR,yBAASP,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAACM,EAAD,CAASC,KAAMA,WAOnC,SAASmB,IACL,OACI,wBAAQ1B,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,UACI,sEACA,4BACI,mBAAG2B,KAAK,gCAAR,sCAiBLC,MAVf,WACI,OACI,gCACI,cAAC7B,EAAD,IACA,cAACsB,EAAD,IACA,cAACK,EAAD,Q,MCzIZG,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.508721fd.chunk.js","sourcesContent":["// exportは他のプログラムがimportできるようになるおまじない\n// asyncはPromiseを返す，fetchもPromiseを返す\nexport async function fetchImages(breed) {\n    // awaitはasync function内でPromiseが返されるまで処理を待機する演算子\n    const response = await fetch(`https://dog.ceo/api/breed/${breed}/images/random/12`);\n    const data = await response.json();\n    return data.message;\n}","// https://zenn.dev/likr/articles/6be53ca64f29aa035f07\n// ReactではJSXという構文でHTMLをマークアップする\n// App()のようなJSXを返すような関数をコンポーネントと呼ぶ\n// コンポーネントはただのJavaScriptの関数！！マークアップと同時にJS書ける！\nimport { useEffect, useState } from 'react';\nimport {fetchImages} from './api';\n\nfunction Header() {\n    return (\n        <header className=\"hero is-dark is-bold\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <h1 className=\"title\">Cute Dog Images</h1>\n                </div>\n            </div>\n        </header>\n    );\n}\n\n// JSXにJavaScriptの式を埋め込むには{式}とする\nfunction Image(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <figure className=\"image\">\n                    <img\n                        src={props.src}\n                        alt=\"cute dog\"\n                    />\n                </figure>\n            </div>\n        </div>\n    );\n}\n\nfunction Loading() {\n    return <p>Loading...</p>;\n}\n\nfunction Gallery(props) {\n    // propsオブジェクトの分割代入！！urlsプロパティを配列として受け取る\n    const {urls} = props; \n    // console.log(props);\n    // console.log(urls);\n    if (urls === null) {\n        return <Loading />;\n    }\n    return (\n        <div className=\"columns is-vcentered is-multiline\">\n            {/* mapメソッドで作られるJSX式は最も外側の要素にkey属性を付けないといけない */}\n            {urls.map((url) => {\n                return (\n                    <div key={url} className=\"column is-3\">\n                        <Image src={url} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nfunction Form(props) {\n    function handleSubmit(event) {\n        event.preventDefault();\n        const {breed} = event.target.elements;\n        props.onFormSubmit(breed.value);\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                        <div className=\"select is-fullwidth\">\n                            <select name=\"breed\" defaultValue=\"shiba\">\n                                <option value=\"shiba\">Shiba</option>\n                                <option value='akita'>Akita</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"control\">\n                        <button type=\"submit\" className=\"button is-dark\">\n                            Reload\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nfunction Main() {\n    // const urls = null;\n    // useState: 関数コンポーネントでstateを管理（保持と更新）するためのReactフック\n    // useEffect: 関数の実行タイミングをレンダリング後まで遅らせるフック，第二引数で第一引数の実行タイミングを指定できる\n    // urlsという名前のstate変数を宣言，初期値nullをセット.第二要素はstateの現在の値を更新するための関数\n    const [urls, setUrls] = useState(null);\n    useEffect(() => {\n        fetchImages(\"shiba\").then((urls) => {\n            // urlsのstateをfetchが成功した値（async関数がPromiseを返した正規のurl）に更新\n            setUrls(urls);\n        });\n    }, []);\n\n    function reloadImages(breed) {\n        fetchImages(breed).then((urls) => {\n            setUrls(urls)\n        });\n    }\n    return (\n        <main>\n            <section className=\"section\">\n                <div className=\"container\">\n                    <Form onFormSubmit={reloadImages}/>\n                </div>\n            </section>\n            <section className=\"section\">\n                <div className=\"container\">\n                    <Gallery urls={urls}/>\n                </div>\n            </section>\n        </main>\n    );\n}\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>Dog images are retrieved from Dog API</p>\n                <p>\n                    <a href=\"https://dog.ceo/dog-api/about\">Donate to Dog API</a>\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n\n// コンポーネントは上のように分割することができる\n// function App() {\n//     return (\n//         <div>\n//             <header className=\"hero is-dark is-bold\">\n//                 <div className=\"hero-body\">\n//                     <div className=\"container\">\n//                         <h1 className=\"title\">Cute Dog Images</h1>\n//                     </div>\n//                 </div>\n//             </header>\n//             <main>\n//                 <section className=\"section\">\n//                     <div className=\"container\">\n//                         <div className=\"columns is-vcenterd is-multiline\">\n//                             <div className=\"column is-3\">\n//                                 <div className=\"card\">\n//                                     <div className=\"card-image\">\n//                                         <figure className=\"image\">\n//                                             <img\n//                                                 src=\"https://images.dog.ceo/breeds/shiba/shiba-8.jpg\"\n//                                                 alt=\"cute dog\"\n//                                             />\n//                                         </figure>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </section>\n//             </main>\n//             <footer className=\"footer\">\n//                 <div className=\"content has-text-centered\">\n//                     <p>Dog images are retrived from Dog API</p>\n//                     <p>\n//                         <a href=\"https://dog.ceo/dog-api/about\">Donate to Dog API</a>\n//                     </p>\n//                 </div>\n//             </footer>\n//         </div>\n//     );\n// }","import { render } from \"react-dom\";\nimport App from \"./App\";\nimport \"bulma/css/bulma.css\";\n\n// src/index.js が src/App.js からインポートした App コンポーネントを、#content にマウントすることで、App コンポーネントが組み立てた JSX 式によってレンダリングされた HTML を Web ブラウザ上に表示\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}